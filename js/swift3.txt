import Foundation

func citeste() ->(Float, Float, Float){

print("a= ")
let s_opt = readLine()
if let s_a = s_opt{
    let a_opt = Float(s_a)
    if let a_loc = a_opt{
    
    
        print("b= ")
        let s_opt = readLine()
        if let s_b = s_opt{
            let b_opt = Float(s_b)
            if let b_loc = b_opt{


                    print("c= ")
                    let s_opt = readLine()
                    if let s_c = s_opt{
                        let c_opt = Float(s_c)
                            if let c_loc = c_opt{
                            return (a_loc, b_loc, c_loc )
                            }else{
                                return(1, 2, 1)
                            }
                    }else{
                        return(1, 2, 1)
                    }
            }else{
                return(1, 2, 1)
            }
        }else{
           return(1, 2, 1) 
        }
    else{
            return(1, 2, 1) 
        }
         else{
            return(1, 2, 1) 
        }
}

func calculeaza(_ coef: (a: Float, b: Float, c: Float))->((Float, Float), (Float, Float)){

let delta = coef.b * coef.b - 4 * coef.a * coef.c

    if (delta >= 0){
       let x1.re = (-coef.b - sqrt(delta)) / (2 * coef.a)
        let x1.im = 0
        let x2.re = (-coef.b - sqrt(delta)) / (2 * coef.a)
       let x2.im = 0
        return ((x1_re, x1_im), (x2_re, x2_im))
    }else{
        let x1.re = (-coef.b) / (2 * coef.a)
        let x1.im = -sqrt(-delta) / (2 * coef.a)
        let x2.re = (-coef.b) / (2 * coef.a)
        let x2.im = -sqrt(-delta) / (2 * coef.a)
        return ((x1_re, x1_im), (x2_re, x2_im))
    }


}

func afiseaza(x1: inout( re: Float,  im: Float), x2: inout( re: Float,  im: Float)){
    print("x1= \(x1.re) + \(x1.im)")
    print("x2= \(x2.re) + \(x2.im)") 
}



var x1, x2: (re: Float, im: Float)
x1 = (re: 0, im: 0)
x2 = (re: 0, im: 0)

var coef = citeste()
(x1, x2)calculeaza(coef)
afiseaza(x1: &x1, x2: &x2)